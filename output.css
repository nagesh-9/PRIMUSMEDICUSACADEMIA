
/*! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

body {
  font-family: 'Roboto', sans-serif;
  margin: 0;
  padding: 0;
  line-height: 1.6;
  color: #333;
  background-color: #f4f4f4;
}

/* Essential Tailwind-like utility classes for fallback */
.text-white { color: #fff; }
.text-gray-800 { color: #1f2937; }
.text-gray-700 { color: #374151; }
.text-gray-500 { color: #6b7280; }
.text-blue-800 { color: #1e40af; }
.text-blue-600 { color: #2563eb; }
.text-blue-500 { color: #3b82f6; }
.text-blue-200 { color: #bfdbfe; }
.text-green-500 { color: #22c55e; }
.text-green-600 { color: #16a34a; }
.text-green-700 { color: #15803d; }
.bg-white { background-color: #fff; }
.bg-gray-100 { background-color: #f3f4f6; }
.bg-gray-50 { background-color: #f9fafb; }
.bg-blue-800 { background-color: #1e3a8a; }
.bg-blue-900 { background-color: #1e3a8a; }
.bg-blue-600 { background-color: #2563eb; }
.bg-blue-700 { background-color: #1d4ed8; }
.bg-green-500 { background-color: #22c55e; }
.bg-green-600 { background-color: #16a34a; }
.bg-green-700 { background-color: #15803d; }
.rounded-lg { border-radius: 0.5rem; }
.rounded-xl { border-radius: 0.75rem; }
.rounded-full { border-radius: 9999px; }
.shadow-lg { box-shadow: 0 10px 15px rgba(0,0,0,0.1); }
.shadow-md { box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
.shadow-2xl { box-shadow: 0 25px 50px rgba(0,0,0,0.25); }
.font-bold { font-weight: 700; }
.font-semibold { font-weight: 600; }
.font-roboto { font-family: 'Roboto', sans-serif; }
.p-4 { padding: 1rem; }
.p-6 { padding: 1.5rem; }
.p-8 { padding: 2rem; }
.py-20 { padding-top: 5rem; padding-bottom: 5rem; }
.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-6 { margin-bottom: 1.5rem; }
.mb-12 { margin-bottom: 3rem; }
.mt-4 { margin-top: 1rem; }
.mt-6 { margin-top: 1.5rem; }
.mt-8 { margin-top: 2rem; }
.text-2xl { font-size: 1.5rem; }
.text-3xl { font-size: 1.875rem; }
.text-4xl { font-size: 2.25rem; }
.text-5xl { font-size: 3rem; }
.text-6xl { font-size: 3.75rem; }
.text-lg { font-size: 1.125rem; }
.text-xl { font-size: 1.25rem; }
.text-sm { font-size: 0.875rem; }
.text-xs { font-size: 0.75rem; }
.leading-relaxed { line-height: 1.625; }
.leading-tight { line-height: 1.25; }
.drop-shadow-lg { filter: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.04)); }
.transition-colors { transition-property: color, background-color, border-color, text-decoration-color, fill, stroke; transition-duration: 150ms; }
.transition-all { transition: all 0.3s ease; }
.duration-300 { transition-duration: 300ms; }
.transform { transform: translateZ(0); }
.hover\:scale-105:hover { transform: scale(1.05); }
.hover\:bg-green-600:hover { background-color: #16a34a; }
.hover\:bg-blue-700:hover { background-color: #1d4ed8; }
.hover\:text-blue-200:hover { color: #bfdbfe; }
.w-full { width: 100%; }
.max-w-3xl { max-width: 48rem; }
.max-w-lg { max-width: 32rem; }
.flex { display: flex; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.space-x-2 > :not(:last-child) { margin-right: 0.5rem; }
.space-y-2 > :not(:last-child) { margin-bottom: 0.5rem; }
.border { border-width: 1px; border-color: #e5e7eb; }
.border-gray-300 { border-color: #d1d5db; }
.border-dashed { border-style: dashed; }
.border-red-300 { border-color: #fca5a5; }
.border-green-300 { border-color: #86efac; }
.border-blue-300 { border-color: #93c5fd; }
.rounded-lg { border-radius: 0.5rem; }
.hidden { display: none !important; }
.block { display: block; }
.relative { position: relative; }
.absolute { position: absolute; }
.z-10 { z-index: 10; }
.z-50 { z-index: 50; }
.z-9999 { z-index: 9999; }
.opacity-90 { opacity: 0.9; }
.opacity-80 { opacity: 0.8; }
.opacity-40 { opacity: 0.4; }
.opacity-25 { opacity: 0.25; }
.opacity-75 { opacity: 0.75; }
.mix-blend-multiply { mix-blend-mode: multiply; }
.filter { filter: blur(20px); }
.animate-spin { animation: spin 1s linear infinite; }
.animate-blob {
  animation: blob 7s infinite;
}
@keyframes blob {
  0% { transform: translate(0px, 0px) scale(1); }
  33% { transform: translate(30px, -50px) scale(1.1); }
  66% { transform: translate(-20px, 20px) scale(0.9); }
  100% { transform: translate(0px, 0px) scale(1); }
}
@keyframes spin {
  to { transform: rotate(360deg); }
}
